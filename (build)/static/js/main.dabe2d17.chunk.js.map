{"version":3,"sources":["assets/cat.png","config/firebaseConfig.js","components/navbar/Navbar.js","components/design/Design.js","components/design/Settings.js","components/dashboard/Dashboard.js","components/home/Home.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","storage","firebaseAppAuth","auth","providers","googleProvider","GoogleAuthProvider","Navbar","this","props","user","signOut","console","log","className","Fragment","to","brand","onClick","Component","withFirebaseAuth","styles","marT","marginTop","Design","display","format","style","alt","src","imgColor","fontSize","color","textColor","upperText","url","lowerText","imgURL","Settings","lowerT","upperT","imgupload","textS","saveDesign","name","onChange","type","placeholder","min","max","Dashboard","state","memeImg","textSize","handleImgColor","e","setState","target","handleUpperText","value","handleLowerText","handleImageUpload","files","image","ref","put","on","snapshot","error","child","getDownloadURL","then","handleTextSize","formatText","size","parseInt","handleTextColor","handleSaveDesign","firebaseDBRef","database","push","alert","Home","signInWithGoogle","whiteB","logo","Logo","displayName","background","width","marR","marginLeft","App","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.dabe2d17.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/cat.f3d6280b.png\";","import firebase from 'firebase';\r\nimport 'firebase/storage';\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyDnc3W3Ki-yxQ_rfHg_6uyp57tOltKbMUA\",\r\n    authDomain: \"shirtapp-19633.firebaseapp.com\",\r\n    databaseURL: \"https://shirtapp-19633.firebaseio.com\",\r\n    projectId: \"shirtapp-19633\",\r\n    storageBucket: \"shirtapp-19633.appspot.com\",\r\n    messagingSenderId: \"666621672360\",\r\n    appId: \"1:666621672360:web:aaf677a1506d8f325ffb9d\"\r\n  };\r\n  // Initialize Firebase\r\n  firebase.initializeApp(firebaseConfig);\r\n\r\n\r\n  const storage = firebase.storage();\r\n  const firebaseAppAuth = firebase.auth();\r\n\r\n  export {\r\n      storage,\r\n      firebaseAppAuth,\r\n      firebase as default\r\n  }","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { firebaseAppAuth } from '../../config/firebaseConfig';\r\nimport withFirebaseAuth from 'react-with-firebase-auth'\r\nimport * as firebase from 'firebase/app';\r\nimport 'firebase/auth';\r\n\r\n\r\nconst providers = {\r\n    googleProvider: new firebase.auth.GoogleAuthProvider(),\r\n};\r\n\r\nclass Navbar extends Component {\r\n\r\n    render() {\r\n        const {\r\n            user,\r\n            signOut,\r\n        } = this.props;\r\n        console.log(user);\r\n\r\n        return (\r\n            <nav className='navbar navbar-expand-lg navbar-light bg-warning'>\r\n                <div className='container'>\r\n                    {\r\n                        user ? (\r\n                            <React.Fragment>\r\n                                <Link to='/' className='navbar-brand text-white'>{this.props.brand}</Link>\r\n                                \r\n                                  <ul className='navbar-nav ml-auto'>\r\n                                        <li className='nav-item '>\r\n                                            <Link to='/dashboard' className='nav-link text-white'>Dashboard</Link>\r\n                                        </li>\r\n                                        <li className='nav-item'>\r\n                                            <button onClick={signOut} className='btn btn-warning'>Log Out</button>\r\n                                        </li>\r\n                                    </ul>\r\n                               \r\n\r\n                            </React.Fragment>\r\n                        ) : <Link to='/' className='navbar-brand text-white'>{this.props.brand}</Link>\r\n                    }\r\n                </div>\r\n            </nav>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withFirebaseAuth({\r\n    providers,\r\n    firebaseAppAuth,\r\n})(Navbar);","import React from 'react';\r\nimport './Design.css';\r\n\r\n\r\nconst Design = ({display, format}) => {\r\n    return ( \r\n        <div className='card card-content' style={styles.marT}>\r\n           <div className='imgTshirt text-center'>\r\n            <img className='img-responsive'\r\n                 alt='shirt'\r\n                 src={`https://res.cloudinary.com/dkkgmzpqd/image/upload/v1545217305/T-shirt%20Images/${display.imgColor}`}  />\r\n           </div>\r\n           <div className='memeText text-center'>\r\n               <div className='upperText'>\r\n                    <p  style={{fontSize: format || '12px', color: display.textColor }}>{display.upperText}</p>\r\n               </div>\r\n               <img  src={`${display.url}` || 'http://via.placeholder.com/400x300'} alt='memeIMG' />\r\n               <div className='lowerText'>\r\n                    <p  style={{fontSize: format, color: display.textColor}}>{display.lowerText}</p>\r\n               </div>\r\n           </div>\r\n        </div>\r\n     );\r\n}\r\n\r\nconst styles = {\r\n    marT: {\r\n        marginTop: '15px'\r\n    }\r\n}\r\n \r\nexport default Design;","import React from 'react';\r\n\r\nconst imgURL = 'https://res.cloudinary.com/dkkgmzpqd/image/upload/v1545217305/T-shirt%20Images/';\r\n\r\n\r\nconst Settings = (props) => {\r\n\r\n    const {color, lowerT , upperT, imgupload, textS, textColor, saveDesign} = props;\r\n\r\n    return (\r\n        <div className='card bg-light container' style={styles.marT}>\r\n            <h3 className='text-center'>\r\n                Settings\r\n            </h3>\r\n            <h4>\r\n                Change T-shirt color\r\n            </h4>\r\n            <div className='tshirt-color'>\r\n                <img onClick={color}  src={`${imgURL}white.png`} alt='shirtsmall' name='white' />\r\n                <img onClick={color}  src={`${imgURL}black.png`} alt='shirtsmall' name='black' />\r\n                <img onClick={color}  src={`${imgURL}grey.png`} alt='shirtsmall' name='grey' />\r\n                <img onClick={color}  src={`${imgURL}blue.png`} alt='shirtsmall' name='blue' />\r\n                <img onClick={color} src={`${imgURL}red.png`} alt='shirtsmall' name='red' />\r\n            </div>\r\n            <hr />\r\n            <h4>Input Text</h4>\r\n            <input onChange={upperT} type='text' name='upper' className='form-control form-control-sm mb-2' placeholder='Upper Text' />\r\n            <input onChange={lowerT} type='text' name='lower' className='form-control form-control-sm mb-2' placeholder='Lower Text' />\r\n            <hr />\r\n            <h4>Upload Image</h4>\r\n            <div className='form-group'>\r\n                <input name='file' onChange={imgupload} type='file' className='form-control-file mb-2' />\r\n            </div>\r\n            <hr />\r\n            <h4>Text Size</h4>\r\n            <input name='range' onChange={textS} type='range' min='24' max='52' />\r\n            <hr />\r\n            <h4>Text Color</h4>\r\n            <select onChange={textColor} className='form-control form-contro-sm mb-2'>\r\n                <option name='white' >White</option>\r\n                <option name='black' >Black</option>\r\n                <option name='red' >Red</option>\r\n                <option name='blue' >Blue</option>\r\n                <option name='green' >Green</option>\r\n            </select>\r\n            <hr />\r\n            <button onClick={saveDesign} className='btn btn-sm btn-secondary mb-2'>Save</button>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nconst styles = {\r\n    marT: {\r\n        marginTop: '15px'\r\n    }\r\n}\r\n\r\nexport default Settings;","import React, { Component } from 'react';\r\nimport Design from '../design/Design';\r\nimport Settings from '../design/Settings';\r\nimport { storage } from '../../config/firebaseConfig';\r\nimport firebase from 'firebase';\r\n\r\n\r\nclass Dashboard extends Component {\r\n    state = {\r\n        imgColor: 'black',\r\n        upperText: 'This is upper text',\r\n        lowerText: 'This is lower text',\r\n        memeImg: '',\r\n        url: '',\r\n        textSize: 44,\r\n        textColor: 'white'\r\n    }\r\n\r\n    handleImgColor = (e) => {\r\n        this.setState({\r\n            imgColor: e.target.name\r\n        });\r\n    }\r\n\r\n    handleUpperText = (e) => {\r\n        this.setState({\r\n            upperText: e.target.value\r\n        });\r\n    }\r\n\r\n    handleLowerText = (e) => {\r\n        this.setState({\r\n            lowerText: e.target.value\r\n        });\r\n    }\r\n\r\n    handleImageUpload = (e) => {\r\n        if (e.target.files[0]) {\r\n            const image = (e.target.files[0]);\r\n            const uploadTask = storage.ref(`images/${image.name}`).put(image);\r\n\r\n            uploadTask.on('state_changed',\r\n                (snapshot) => {\r\n                    console.log(snapshot);\r\n                },\r\n                (error) => {\r\n                    console.log(error);\r\n                },\r\n                () => {\r\n                    storage.ref('images').child(image.name).getDownloadURL().then(url => {\r\n                        this.setState({ url });\r\n                    })\r\n                })\r\n        }\r\n    }\r\n\r\n    handleTextSize = (e) => {\r\n        this.setState({\r\n            textSize: e.target.value\r\n        });\r\n\r\n        console.log(this.state.textSize)\r\n    }\r\n\r\n    formatText = () => {\r\n        const size = this.state.textSize;\r\n        return parseInt(size);\r\n    }\r\n\r\n    handleTextColor = (e) => {\r\n        this.setState({\r\n            textColor: e.target.value\r\n        });\r\n    }\r\n\r\n    handleSaveDesign = (e) => {\r\n        const firebaseDBRef = firebase.database().ref('orders').child('shirts');\r\n\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        });\r\n\r\n        firebaseDBRef.push(this.state);\r\n\r\n        console.log(this.state);\r\n        alert('Successfully submitted');\r\n\r\n        \r\n\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className='container-fluid'>\r\n                <div className='row'>\r\n                    <div className='col-lg-8'>\r\n                        <Design\r\n                            display={this.state}\r\n                            format={this.formatText()}\r\n                        />\r\n                    </div>\r\n                    <div className='col-lg-4'>\r\n                        <Settings\r\n                            color={this.handleImgColor}\r\n                            upperT={this.handleUpperText}\r\n                            lowerT={this.handleLowerText}\r\n                            imgupload={this.handleImageUpload}\r\n                            textS={this.handleTextSize}\r\n                            textColor={this.handleTextColor}\r\n                            saveDesign={this.handleSaveDesign}\r\n                        />\r\n                    </div>\r\n\r\n                </div>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Dashboard;","import React, { Component } from 'react';\r\nimport Logo from '../../assets/cat.png';\r\nimport withFirebaseAuth from 'react-with-firebase-auth'\r\nimport * as firebase from 'firebase/app';\r\nimport 'firebase/auth';\r\nimport { firebaseAppAuth } from '../../config/firebaseConfig';\r\n\r\n\r\n\r\nconst providers = {\r\n    googleProvider: new firebase.auth.GoogleAuthProvider(),\r\n};\r\n\r\n\r\nclass Home extends Component {\r\n\r\n\r\n    render() {\r\n        const {\r\n            user,\r\n            signOut,\r\n            signInWithGoogle,\r\n        } = this.props;\r\n        return (\r\n            <div className='jumbotron' style={styles.whiteB}>\r\n                <div className='container'>\r\n                    <div className='row'>\r\n                        <div className='col-md-3'>\r\n                            <img style={styles.logo} src={Logo} />\r\n                        </div>\r\n                        <div className='col-md-9'>\r\n                            {\r\n                                user ? (\r\n                                    <div>\r\n                                        <h1 className='display-4'>Hey {user.displayName}, did you know</h1> <br /> <h3>\"Everything you can imagine is real.\" -- Pablo Picasso\" </h3>\r\n                                        <p className='lead'>App developed for people who want to design their own shirts.</p>\r\n                                    </div>\r\n                                ) : (\r\n                                        <div>\r\n                                            <h1 className='display-4'>Design your own t-shirt</h1>\r\n                                            <p className='lead'>App developed for people who want to design their own shirts.</p>\r\n                                        </div>\r\n                                    )\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className='text-center'>\r\n                    <hr className='my-4' />\r\n                    {\r\n                        user ? (<p>Here you can log out</p>)\r\n                            : (<div><p>You must be logged in to start design process. <br />\r\n                                You can just log in with Google.</p>\r\n                            </div>)\r\n                    }\r\n                    {\r\n                        user\r\n                            ? <button className='btn btn-primary' onClick={signOut}>Sign out</button>\r\n                            : <button className='btn btn-primary' onClick={signInWithGoogle}>Sign with Google</button>\r\n                    }\r\n\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nconst styles = {\r\n    whiteB: {\r\n        background: '#fff'\r\n    },\r\n    logo: {\r\n        width: '190px'\r\n    },\r\n    marR: {\r\n        marginLeft: '100px'\r\n    }\r\n}\r\n\r\nexport default withFirebaseAuth({\r\n    providers,\r\n    firebaseAppAuth,\r\n})(Home);","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport Navbar from './components/navbar/Navbar';\nimport Dashboard from './components/dashboard/Dashboard';\nimport Home from './components/home/Home';\nimport { firebaseAppAuth } from './config/firebaseConfig';\nimport withFirebaseAuth from 'react-with-firebase-auth'\nimport * as firebase from 'firebase/app';\nimport 'firebase/auth';\n\nconst providers = {\n  googleProvider: new firebase.auth.GoogleAuthProvider(),\n};\n\nclass App extends Component {\n\n\n  render() {\n    const { user } = this.props;\n    return (\n      <Router>\n        <div className=\"App\">\n          <Navbar brand='DIY Design' />\n          <div className='container-fluid'>\n            {\n              user ? (<Switch>\n                          <Route exact path='/' component={Home} />\n                          <Route exact path='/dashboard' component={Dashboard} />\n                      </Switch>) \n                    : (<Switch>\n                           <Route exact path='/' component={Home} />\n                      </Switch>)\n            }\n          </div>\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default withFirebaseAuth({\n  providers,\n  firebaseAppAuth,\n})(App);","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}